# 多阶段构建：生产环境优化版本，支持多架构
FROM --platform=$BUILDPLATFORM node:18-alpine as builder

# 设置工作目录
WORKDIR /app

# 复制package文件
COPY package*.json ./

# 安装依赖，使用npm ci提高构建速度
RUN npm ci --only=production --quiet

# 复制源代码
COPY . .

# 设置生产环境变量，禁用source maps，启用优化
ENV GENERATE_SOURCEMAP=false
ENV REACT_APP_GENERATE_SOURCEMAP=false
ENV NODE_OPTIONS="--max-old-space-size=4096"

# 构建生产版本
RUN npm run build

# 生产运行阶段 - 使用多架构支持的nginx
FROM nginx:alpine

# 复制构建结果到nginx
COPY --from=builder /app/build /usr/share/nginx/html

# 创建默认nginx配置以支持React SPA路由
RUN echo 'server {' > /etc/nginx/conf.d/default.conf && \
  echo '    listen 80;' >> /etc/nginx/conf.d/default.conf && \
  echo '    server_name localhost;' >> /etc/nginx/conf.d/default.conf && \
  echo '    root /usr/share/nginx/html;' >> /etc/nginx/conf.d/default.conf && \
  echo '    index index.html index.htm;' >> /etc/nginx/conf.d/default.conf && \
  echo '    # Gzip压缩' >> /etc/nginx/conf.d/default.conf && \
  echo '    gzip on;' >> /etc/nginx/conf.d/default.conf && \
  echo '    gzip_vary on;' >> /etc/nginx/conf.d/default.conf && \
  echo '    gzip_min_length 1024;' >> /etc/nginx/conf.d/default.conf && \
  echo '    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;' >> /etc/nginx/conf.d/default.conf && \
  echo '    # 缓存静态资源' >> /etc/nginx/conf.d/default.conf && \
  echo '    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {' >> /etc/nginx/conf.d/default.conf && \
  echo '        expires 1y;' >> /etc/nginx/conf.d/default.conf && \
  echo '        add_header Cache-Control "public, immutable";' >> /etc/nginx/conf.d/default.conf && \
  echo '    }' >> /etc/nginx/conf.d/default.conf && \
  echo '    location / {' >> /etc/nginx/conf.d/default.conf && \
  echo '        try_files $uri $uri/ /index.html;' >> /etc/nginx/conf.d/default.conf && \
  echo '        # 禁用HTML缓存' >> /etc/nginx/conf.d/default.conf && \
  echo '        add_header Cache-Control "no-cache, no-store, must-revalidate";' >> /etc/nginx/conf.d/default.conf && \
  echo '        add_header Pragma "no-cache";' >> /etc/nginx/conf.d/default.conf && \
  echo '        add_header Expires "0";' >> /etc/nginx/conf.d/default.conf && \
  echo '    }' >> /etc/nginx/conf.d/default.conf && \
  echo '    error_page 500 502 503 504 /50x.html;' >> /etc/nginx/conf.d/default.conf && \
  echo '    location = /50x.html {' >> /etc/nginx/conf.d/default.conf && \
  echo '        root /usr/share/nginx/html;' >> /etc/nginx/conf.d/default.conf && \
  echo '    }' >> /etc/nginx/conf.d/default.conf && \
  echo '}' >> /etc/nginx/conf.d/default.conf

# 暴露端口
EXPOSE 80

# 启动nginx
CMD ["nginx", "-g", "daemon off;"] 