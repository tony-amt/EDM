# 优化的生产环境多阶段构建
# 第一阶段：依赖安装（可缓存）
FROM node:18-alpine AS deps
WORKDIR /app
COPY package*.json ./
RUN npm ci --only=production --silent

# 第二阶段：开发依赖和构建工具（可缓存）
FROM node:18-alpine AS build-deps
WORKDIR /app
COPY package*.json ./
RUN npm ci --silent

# 第三阶段：源码构建
FROM build-deps AS builder
WORKDIR /app
COPY . .
# 使用并行构建和内存优化
ENV NODE_OPTIONS="--max-old-space-size=4096"
RUN npm run build

# 第四阶段：生产镜像
FROM nginx:alpine AS production
# 安装必要工具
RUN apk add --no-cache curl

# 复制构建结果
COPY --from=builder /app/build /usr/share/nginx/html

# 优化的nginx配置
RUN echo 'server {' > /etc/nginx/conf.d/default.conf && \
  echo '    listen 80;' >> /etc/nginx/conf.d/default.conf && \
  echo '    server_name localhost;' >> /etc/nginx/conf.d/default.conf && \
  echo '    root /usr/share/nginx/html;' >> /etc/nginx/conf.d/default.conf && \
  echo '    index index.html;' >> /etc/nginx/conf.d/default.conf && \
  echo '    # SPA路由支持' >> /etc/nginx/conf.d/default.conf && \
  echo '    location / {' >> /etc/nginx/conf.d/default.conf && \
  echo '        try_files $uri $uri/ /index.html;' >> /etc/nginx/conf.d/default.conf && \
  echo '    }' >> /etc/nginx/conf.d/default.conf && \
  echo '    # 静态资源缓存' >> /etc/nginx/conf.d/default.conf && \
  echo '    location ~* \\.(js|css|png|jpg|jpeg|gif|ico|svg)$ {' >> /etc/nginx/conf.d/default.conf && \
  echo '        expires 1y;' >> /etc/nginx/conf.d/default.conf && \
  echo '        add_header Cache-Control "public, immutable";' >> /etc/nginx/conf.d/default.conf && \
  echo '    }' >> /etc/nginx/conf.d/default.conf && \
  echo '    # API代理（如果需要）' >> /etc/nginx/conf.d/default.conf && \
  echo '    location /api/ {' >> /etc/nginx/conf.d/default.conf && \
  echo '        proxy_pass http://edm-backend-prod:5000;' >> /etc/nginx/conf.d/default.conf && \
  echo '        proxy_set_header Host $host;' >> /etc/nginx/conf.d/default.conf && \
  echo '        proxy_set_header X-Real-IP $remote_addr;' >> /etc/nginx/conf.d/default.conf && \
  echo '    }' >> /etc/nginx/conf.d/default.conf && \
  echo '}' >> /etc/nginx/conf.d/default.conf

# 健康检查
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost/ || exit 1

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"] 